{"mappings":"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","sources":["scripts/load_xml.js"],"sourcesContent":["/**\n * Load a specific XML File\n */\nfunction load(xmlFile) {\n    console.log(xmlFile.toString());\n    let request = new XMLHttpRequest();\n    request.open(\"GET\", xmlFile, true);\n    request.onreadystatechange = function() {\n        if (request.readyState === 4 && request.status === 200) {\n            parse(request.responseXML);\n        }\n    };\n    request.send();\n}\n\nfunction parse(xml) {\n    /**\n     * Log to console and display me.title.\n     * This goes through the entire XML file and writes out log messages to the consol.\n     */\n    console.log(\"typeof xml = \" + typeof xml);\n    console.log(\"xml.toString() = \" + xml.toString());\n    let elements = xml.getElementsByTagName('*');\n    console.log(\"Number of elements=\" + elements.length);\n    for (let i = 0; i < elements.length; i++) {\n        let nn = elements[i].nodeName;\n        //let tn = elements[i].tagName;\n        //let nn = elements[i].getNodeName();\n        if (nn != null) {\n            //console.log(\"elements[\" + i + \"].nodeName = \" + nn);\n            //console.log(\"elements[\" + i + \"].tagName = \" + nn);\n            let cn = elements[i].childNodes[0];\n            if (cn != null) {\n                let nv = cn.nodeValue;\n                if (nv != null) {\n                    nv = nv.trim();\n                    if (nv.length > 0) {\n                        if (nn === \"me:title\") {\n                            document.getElementById(\"metitle\").innerHTML = nv;\n                        }\n                        //console.log(\"elements[\" + i + \"].childNodes[0].nodeValue = \" + nv);\n                    }\n                }\n            }\n        }\n    }\n    // The following does not work because of the \":\" in the tag.\n    //var title = xmlDoc.getElementsByTagName('me:title').nodeValue;\n    //console.log(\"Title=\" + title);\n    //document.getElementById(\"metitle\").innerHTML = title;\n\n    /**\n     * Generate molecules table.\n     */\n    document.getElementById(\"molecules\").innerHTML = getTable(generateMoleculesTable(xml));\n\n    /**\n     * Generate reactions table.\n     */\n    document.getElementById(\"reactions\").innerHTML = getTable(generateReactionsTable(xml));\n}\n\n/**\n * Generate reactions table.\n * @param XMLDocument xml\n * @return String\n */\nfunction generateReactionsTable(xml) {\n    var reactions = xml.getElementsByTagName('reaction');\n    console.log(\"\" + reactions.length + \" = Number of reactions\");\n    // Report number of reactions with id attributes.\n    console.log(count(reactions, \"id\") + \" = Number of reactions with ids\");\n    // Prepare table headings.\n    names = [\"ID\", \"Reactants\", \"Products\", \"Transition State\", \"PreExponential\", \"Activation Energy\", \"TInfinity\", \"NInfinity\"];\n    var table = getTH(names);\n    // Process each reaction.\n    for (let i = 0; i < reactions.length; i++) {\n      let id = reactions[i].getAttribute(\"id\");\n      var treactants = \"\";\n      var tproducts = \"\";\n      var ttransitionState = \"\";\n      var tpreExponential = \"\";\n      var tactivationEnergy = \"\";\n      var ttInfinity = \"\";\n      var tnInfinity = \"\";\n      if (id != null) {\n        console.log(\"id = \" + id);\n        let elements = reactions[i].getElementsByTagName(\"*\");\n        console.log(\"elements.length = \" + elements.length);\n        for (let j = 0; j < elements.length; j++) {\n          //console.log(\"elements[\" + j + \"] = \" + elements[j]);\n          //console.log(\"elements[\" + j + \"].length = \" + elements[j].length);\n          console.log(\"elements[\" + j + \"].nodeName = \" + elements[j].nodeName);\n          //console.log(\"elements[\" + j + \"].nodeValue = \" + elements[j].nodeValue);\n          if (elements[j].nodeName === \"reactant\") {\n            let molecules = elements[j].getElementsByTagName(\"molecule\");\n            //console.log(\"molecules =\" + molecules);\n            //console.log(\"molecules.length =\" + molecules.length);\n            //if (molecules.length > 0) {\n            let moleculeRef = molecules[0].getAttribute(\"ref\");\n            console.log(\"moleculeRef = \" + moleculeRef);\n            let moleculeRole = molecules[0].getAttribute(\"role\");\n            console.log(\"moleculeRole = \" + moleculeRole);\n            if (treactants === \"\") {\n              treactants += moleculeRef;\n            } else {\n              treactants += \" + \" + moleculeRef;\n            }\n            //}\n          } else if (elements[j].nodeName === \"product\") {\n            let molecules = elements[j].getElementsByTagName(\"molecule\");\n            console.log(\"molecules = \" + molecules);\n            console.log(\"molecules.length = \" + molecules.length);\n            if (molecules.length > 0) {\n              let moleculeRef = molecules[0].getAttribute(\"ref\");\n              console.log(\"moleculeRef = \" + moleculeRef);\n              var moleculeRole = molecules[0].getAttribute(\"role\");\n              console.log(\"moleculeRole = \" + moleculeRole);\n              if (tproducts === \"\") {\n                tproducts += moleculeRef;\n              } else {\n                console.log(\"tproducts = \" + tproducts);\n                tproducts += \" + \" + moleculeRef;\n                console.log(\"tproducts = \" + tproducts);\n              }\n            }\n          } else if (elements[j].nodeName === \"me:MCRCMethod\") {\n            console.log(\"MCRCMethod\");\n            console.log(\"elements[j].getAttribute(\\\"xsi:type\\\") = \" + elements[j].getAttribute(\"xsi:type\"));\n            let els = elements[j].getElementsByTagName(\"*\");\n            console.log(\"els = \" + els);\n            console.log(\"els.length = \" + els.length);\n            if (els.length > 0) {\n              for (let k = 0; k < els.length; k++) {\n                //var moleculeRef = molecules[0].getAttribute(\"ref\");\n                console.log(\"els[\" + k + \"] = \" + els[k]);\n                console.log(\"els[\" + k + \"].nodeName = \" + els[k].nodeName);\n                console.log(\"els[\" + k + \"].nodeValue = \" + els[k].nodeValue);\n                if (els[k].nodeName === \"me:preExponential\") {\n                  let cn = els[k].childNodes;\n                  console.log(\"cn = \" + cn);\n                  console.log(\"cn.length = \" + cn.length);\n                  console.log(\"cn[0].nodeValue = \" + cn[0].nodeValue);\n                  if (tpreExponential === \"\") {\n                    tpreExponential += cn[0].nodeValue;\n                  } else {\n                    tpreExponential += \" + \" + cn[0].nodeValue;\n                  }\n                } else if (els[k].nodeName === \"me:activationEnergy\") {\n                  let cn = els[k].childNodes;\n                  console.log(\"cn = \" + cn);\n                  console.log(\"cn.length = \" + cn.length);\n                  console.log(\"cn[0].nodeValue = \" + cn[0].nodeValue);\n                  if (tactivationEnergy === \"\") {\n                    tactivationEnergy += cn[0].nodeValue;\n                  } else {\n                    tactivationEnergy += \" + \" + cn[0].nodeValue;\n                  }\n                } else if (els[k].nodeName === \"me:TInfinity\") {\n                  let cn = els[k].childNodes;\n                  console.log(\"cn = \" + cn);\n                  console.log(\"cn.length = \" + cn.length);\n                  console.log(\"cn[0].nodeValue = \" + cn[0].nodeValue);\n                  if (ttInfinity === \"\") {\n                    ttInfinity += cn[0].nodeValue;\n                  } else {\n                    ttInfinity += \" + \" + cn[0].nodeValue;\n                  }\n                } else if (els[k].nodeName === \"me:nInfinity\") {\n                  let cn = els[k].childNodes;\n                  console.log(\"cn = \" + cn);\n                  console.log(\"cn.length = \" + cn.length);\n                  console.log(\"cn[0].nodeValue = \" + cn[0].nodeValue);\n                  if (tnInfinity === \"\") {\n                    tnInfinity += cn[0].nodeValue;\n                  } else {\n                    tnInfinity += \" + \" + cn[0].nodeValue;\n                  }\n                } else {\n                  console.log(\"Unrecognised nodeName = \" + els[k].nodeName);\n                  return;\n                }\n              }\n            }\n          } else if (elements[j].nodeName === \"me:transitionState\") {\n            let molecules = elements[j].getElementsByTagName(\"*\");\n            console.log(\"molecules =\" + molecules);\n            console.log(\"molecules.length = \" + molecules.length);\n            let moleculeRef = molecules[0].getAttribute(\"ref\");\n            console.log(\"moleculeRef = \" + moleculeRef);\n            let moleculeRole = molecules[0].getAttribute(\"role\");\n            console.log(\"moleculeRole = \" + moleculeRole);\n            if (ttransitionState === \"\") {\n              ttransitionState += moleculeRef;\n            } else {\n              ttransitionState += \" + \" + moleculeRef;\n            }\n          } else {\n            //console.log(\"elements[\" + j + \"].nodeName = \" + elements[j].nodeName);\n          }\n        }\n        console.log(\"treactants = \" + treactants);\n        console.log(\"tproducts = \" + tproducts);\n        console.log(\"ttransitionState = \" + ttransitionState);\n        console.log(\"tpreExponential = \" + tpreExponential);\n        console.log(\"tactivationEnergy = \" + tactivationEnergy);\n        console.log(\"ttInfinity = \" + ttInfinity);\n        console.log(\"tnInfinity = \" + tnInfinity);\n        table += getTR(getTD(id) + getTD(treactants) + getTD(tproducts) + getTD(ttransitionState) + getTD(tpreExponential) + getTD(tactivationEnergy) + getTD(ttInfinity) + getTD(tnInfinity));\n        console.log(\"table = \" + table);\n      }\n    }\n    return table;\n  }\n\n  /**\n   * Generate molecules table.\n   * @param XMLDocument xml\n   * @return String\n   */\n  function generateMoleculesTable(xml) {\n    var molecules = xml.getElementsByTagName('molecule');\n    console.log(\"\" + molecules.length + \" = Number of molecules\");\n    // Report number of molecules with id and description attributes.\n    console.log(count(molecules, \"id\") + \" = Number of molecules with ids\");\n    console.log(count(molecules, \"description\") + \" = Number of molecules with descriptions\");\n    // Prepare table headings.\n    const names = [\"Name\", \"Energy<br>kJ/mol\", \"Rotational constants<br>cm<sup>-1</sup>\", \"Vibrational frequencies<br>cm<sup>-1</sup>\"];\n    var table = getTH(names);\n    // Process each molecule.\n    for (let i = 0; i < molecules.length; i++) {\n      var energy = \"\";\n      var rotationalConstants = \"\";\n      var vibrationalFrequencies = \"\";\n      let id = molecules[i].getAttribute(\"id\");\n      if (id != null) {\n        console.log(\"id =\" + id);\n        let propertyList = molecules[i].getElementsByTagName(\"propertyList\");\n        for (let j = 0; j < propertyList.length; j++) {\n          let property = propertyList[j].getElementsByTagName(\"property\");\n          console.log(\"property.length =\" + property.length);\n          for (let k = 0; k < property.length; k++) {\n            let dictRef = property[k].getAttribute(\"dictRef\");\n            if (dictRef != null) {\n              if (dictRef === \"me:ZPE\") {\n                console.log(\"dictRef =\" + dictRef);\n                let scalar = property[k].getElementsByTagName(\"scalar\");\n                console.log(\"scalar =\" + scalar);\n                console.log(\"scalar.length =\" + scalar.length);\n                let cn = scalar[0].childNodes;\n                console.log(\"cn.length =\" + cn.length);\n                for (let l = 0; l < cn.length; l++) {\n                  console.log(\"cn[\" + l + \"]\");\n                  if (cn[l] != null) {\n                    console.log(\"cn[\" + l + \"] =\" + cn[l]);\n                    console.log(\"cn[\" + l + \"].length =\" + cn[l].length);\n                    console.log(\"cn[\" + l + \"].nodeName =\" + cn[l].nodeName);\n                    console.log(\"cn[\" + l + \"].nodeValue =\" + cn[l].nodeValue);\n                    energy = cn[l].nodeValue;\n                    console.log(\"energy =\" + energy);\n                  }\n                }\n              } else if (dictRef === \"me:rotConsts\") {\n                console.log(\"dictRef =\" + dictRef);\n                let array = property[k].getElementsByTagName(\"array\");\n                console.log(\"array =\" + array);\n                console.log(\"array.length =\" + array.length);\n                let cn = array[0].childNodes;\n                console.log(\"cn.length =\" + cn.length);\n                for (let l = 0; l < cn.length; l++) {\n                  console.log(\"cn[\" + l + \"]\");\n                  if (cn[l] != null) {\n                    console.log(\"cn[\" + l + \"] =\" + cn[l]);\n                    console.log(\"cn[\" + l + \"].length =\" + cn[l].length);\n                    console.log(\"cn[\" + l + \"].nodeName =\" + cn[l].nodeName);\n                    console.log(\"cn[\" + l + \"].nodeValue =\" + cn[l].nodeValue);\n                    rotationalConstants = cn[l].nodeValue;\n                    console.log(\"rotationalConstants =\" + rotationalConstants);\n                  }\n                }\n              } else if (dictRef === \"me:vibFreqs\") {\n                console.log(\"dictRef =\" + dictRef);\n                let array = property[k].getElementsByTagName(\"array\");\n                console.log(\"array =\" + array);\n                console.log(\"array.length =\" + array.length);\n                let cn = array[0].childNodes;\n                console.log(\"cn.length =\" + cn.length);\n                for (let l = 0; l < cn.length; l++) {\n                  console.log(\"cn[\" + l + \"]\");\n                  if (cn[l] != null) {\n                    console.log(\"cn[\" + l + \"] =\" + cn[l]);\n                    console.log(\"cn[\" + l + \"].length =\" + cn[l].length);\n                    console.log(\"cn[\" + l + \"].nodeName =\" + cn[l].nodeName);\n                    console.log(\"cn[\" + l + \"].nodeValue =\" + cn[l].nodeValue);\n                    vibrationalFrequencies = cn[l].nodeValue;\n                    console.log(\"vibrationalFrequencies =\" + vibrationalFrequencies);\n                  }\n                }\n              } else {\n                console.log(\"dictRef =\" + dictRef);\n              }\n            }\n          }\n        }\n        table += getTR(getTD(id) + getTD(energy) + getTD(rotationalConstants) + getTD(vibrationalFrequencies));\n      }\n    }\n    return table;\n  }\n\n  /**\n * Count the number of elements with a specific attribute.\n * @param Element[] elements\n * @param String attribute_name\n * @return int\n */\nfunction count(elements, attribute_name) {\n    let r = 0;\n    for (let i = 0; i < elements.length; i++) {\n        if (elements[i].getAttribute(attribute_name) != null) {\n            r++;\n        }\n    }\n    return r;\n}\n\n  /*\n  * @param headings An array of strings.\n  * @return String\n  */\n  function getTH(headings) {\n    var th = \"\";\n    for (let i = 0; i < headings.length; i++) {\n      th += \"<th>\" + headings[i] + \"</th>\"\n    }\n    return getTR(th);\n  }\n\n  /*\n  * @param String x A cell for a table row.\n  * @return x wrapped in td tags.\n  */\n  function getTD(x) {\n    return \"<td>\" + x + \"</td>\";\n  }\n\n  /*\n  * @param String x A row for a table.\n  * @return x wrapped in tr tags.\n  */\n  function getTR(x) {\n    return \"<tr>\" + x + \"</tr>\\n\";\n  }\n\n  /*\n  * @param String x Table rows for a table.\n  * @return x wrapped in table tags.\n  */\n  function getTable(x) {\n    return \"<table>\" + x + \"</table>\";\n  }"],"names":[],"version":3,"file":"DisplayXML.26ab7c4d.js.map","sourceRoot":"/__parcel_source_root/"}